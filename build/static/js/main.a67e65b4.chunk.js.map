{"version":3,"sources":["components/Header/index.js","components/Thermometer/style.js","util/words.js","api/index.js","components/Thermometer/index.js","components/TemperatureVariant/line.js","components/TemperatureVariant/style.js","components/TemperatureVariant/index.js","components/Calendar/index.js","components/UserInfo/style.js","components/UserInfo/index.js","components/Search/style.js","components/Search/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","navlinkStyle","color","fontSize","padding","Navbar","bg","variant","style","justifyContent","paddingRight","to","Brand","href","marginLeft","Nav","S","AppHeader","styled","div","h1","Information","Analyze","Temperature","span","Result","Table","Degree","tr","Warm","th","Mid","Cold","MidTextArea","td","textarea","removeOneWords","array","filter","value","text","length","instance","axios","create","baseURL","process","getWords","userId","a","get","response","console","log","getUserInfo","options","colors","enableTooltip","deterministic","fontFamily","fontSizes","rotations","rotationAngles","scale","spiral","transitionDuration","Thermometer","useState","words","setWords","useEffect","localStorage","getItem","data","_","uniqBy","fetchData","cols","rows","readOnly","height","Line","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","modifiers","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","h","TemperatureVariant","StyleWrapper","HeaderWrapper","FooterWrapper","Calendar","defaultView","plugins","dayGridPlugin","events","title","date","useStyles","makeStyles","root","display","spacing","large","width","UserInfo","classes","user","setUser","Avatar","src","profile_img","alt","className","name","twitter_id","description","user_created","Search","history","useHistory","setUserId","clickHandler","setItem","push","alignItems","noValidate","autoComplete","TextField","id","label","onChange","target","Button","onClick","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a67e65b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nfunction Header() {\r\n  const navbarStyle = { justifyContent: 'space-between', paddingRight: '3rem' };\r\n  const navbrandStyle = { fontSize: '38px', marginLeft: '3rem' };\r\n  const navlinkStyle = { color: '#f0adad', fontSize: '23px', padding: '15px' };\r\n\r\n  return (\r\n    <Navbar bg=\"light\" variant=\"light\" style={navbarStyle}>\r\n      <NavLink to=\"/\">\r\n        <Navbar.Brand href=\"/home\" style={navbrandStyle}>\r\n          ONTACT\r\n        </Navbar.Brand>\r\n      </NavLink>\r\n      <Nav>\r\n        <NavLink style={navlinkStyle} to=\"/thermometer\">\r\n          온도계\r\n        </NavLink>\r\n        <NavLink style={navlinkStyle} to=\"/calendar\">\r\n          온도캘린더\r\n        </NavLink>\r\n        <NavLink style={navlinkStyle} to=\"/temperature-variant\">\r\n          온도변화\r\n        </NavLink>\r\n        <NavLink style={navlinkStyle} to=\"/user-info\">\r\n          내정보\r\n        </NavLink>\r\n        <NavLink style={navlinkStyle} to=\"/\">\r\n          검색\r\n        </NavLink>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  h1: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Information: styled.div`\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n  `,\r\n\r\n  Analyze: styled.div`\r\n    font-size: 20px;\r\n    margin: 20px;\r\n  `,\r\n\r\n  Temperature: styled.span`\r\n    color: red;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Result: styled.span`\r\n    font-size: 18px;\r\n  `,\r\n\r\n  Table: styled.div`\r\n    width: 100%;\r\n    text-align: -webkit-center;\r\n  `,\r\n\r\n  Degree: styled.tr`\r\n    text-align: left;\r\n  `,\r\n\r\n  Warm: styled.th`\r\n    font-size: 30px;\r\n    color: #f0adad;\r\n  `,\r\n\r\n  Mid: styled.th`\r\n    font-size: 30px;\r\n    color: #404041;\r\n    padding: 0px 80px;\r\n  `,\r\n\r\n  Cold: styled.th`\r\n    font-size: 30px;\r\n    color: #718ac0;\r\n  `,\r\n\r\n  MidTextArea: styled.td`\r\n    padding: 0px 80px;\r\n  `,\r\n\r\n  textarea: styled.textarea`\r\n    resize: none;\r\n  `,\r\n};\r\n","import _ from 'lodash';\r\n\r\nexport const deduplicateArray = (array) => {\r\n  return _.uniqBy(array, 'text');\r\n};\r\n\r\nexport const removeOneWords = (array) => {\r\n  return array.filter((value) => value.text.length > 1);\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_ADDRESS,\r\n});\r\n\r\n// async function searchUser(userId) {\r\n//   try {\r\n//     const response = await instance.get(`/api/sentence?user_id=${userId}`);\r\n//     return response;\r\n//   } catch (err) {\r\n//     console.log(err);\r\n//   }\r\n// }\r\n\r\nasync function getWords(userId) {\r\n  try {\r\n    const response = await instance.get(`/api/word/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getUserInfo(userId) {\r\n  try {\r\n    const response = await instance.get(`/api/user/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport { getWords, getUserInfo };\r\n","import React, { useState } from 'react';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport { S } from './style';\r\n// import { words } from './words';\r\nimport { deduplicateArray, removeOneWords } from '../../util/words';\r\nimport { getWords } from '../../api';\r\nimport { useEffect } from 'react';\r\n\r\nconst options = {\r\n  colors: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b'],\r\n  enableTooltip: true,\r\n  deterministic: false,\r\n  fontFamily: 'sans-serif',\r\n  fontSizes: [10, 100],\r\n  padding: 1,\r\n  rotations: 3,\r\n  rotationAngles: [0, 90],\r\n  scale: 'sqrt',\r\n  spiral: 'archimedean',\r\n  transitionDuration: 500,\r\n};\r\n\r\nfunction Thermometer() {\r\n  const [words, setWords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getWords(localStorage.getItem('userId'));\r\n      setWords(removeOneWords(deduplicateArray(response.data.data)));\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <S.AppHeader>\r\n      <S.h1>온도계</S.h1>\r\n      <S.Information>\r\n        <S.Analyze>\r\n          2021년 이월의 게시글 온도는 <S.Temperature>64&deg;C</S.Temperature> 입니다.\r\n        </S.Analyze>\r\n        <S.Result>총 23개의 글 분석 결과</S.Result>\r\n      </S.Information>\r\n\r\n      <S.Table>\r\n        <table>\r\n          <tbody>\r\n            <S.Degree>\r\n              <S.Warm>溫온</S.Warm>\r\n              <S.Mid>中중</S.Mid>\r\n              <S.Cold>冷냉</S.Cold>\r\n            </S.Degree>\r\n            <tr>\r\n              <td>\r\n                <S.textarea cols=\"30\" rows=\"10\" readOnly></S.textarea>\r\n              </td>\r\n              <S.MidTextArea>\r\n                <S.textarea cols=\"30\" rows=\"10\" readOnly></S.textarea>\r\n              </S.MidTextArea>\r\n              <td>\r\n                <S.textarea cols=\"30\" rows=\"10\" readOnly></S.textarea>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </S.Table>\r\n\r\n      <div style={{ height: 600 }}>\r\n        <S.h1>나의 단어</S.h1>\r\n        <ReactWordcloud options={options} words={words} />\r\n      </div>\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default Thermometer;\r\n","import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport data from './data';\r\n\r\n// make sure parent container have a defined height when using responsive component,\r\n// otherwise height will be 0 and no chart will be rendered.\r\n// website examples showcase many properties, you'll often use just a few of them.\r\nconst Line = () => (\r\n  <ResponsiveLine\r\n    data={data}\r\n    margin={{ top: 50, right: 110, bottom: 50, left: 100 }}\r\n    xScale={{ type: 'point' }}\r\n    yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n    yFormat=\" >-.2f\"\r\n    axisTop={null}\r\n    axisRight={null}\r\n    axisBottom={{\r\n      orient: 'bottom',\r\n      tickSize: 5,\r\n      tickPadding: 5,\r\n      tickRotation: 0,\r\n      legend: '',\r\n      legendOffset: 36,\r\n      legendPosition: 'middle',\r\n    }}\r\n    axisLeft={{\r\n      orient: 'left',\r\n      tickSize: 5,\r\n      tickPadding: 5,\r\n      tickRotation: 0,\r\n      legend: '온도( ºC)',\r\n      legendOffset: -40,\r\n      legendPosition: 'middle',\r\n    }}\r\n    colors={{ scheme: 'pink_yellowGreen' }}\r\n    pointSize={10}\r\n    pointColor={{ theme: 'background' }}\r\n    pointBorderWidth={2}\r\n    pointBorderColor={{ from: 'serieColor', modifiers: [] }}\r\n    pointLabelYOffset={-12}\r\n    useMesh={true}\r\n    legends={[\r\n      {\r\n        anchor: 'bottom-right',\r\n        direction: 'column',\r\n        justify: false,\r\n        translateX: 101,\r\n        translateY: 0,\r\n        itemsSpacing: 0,\r\n        itemDirection: 'left-to-right',\r\n        itemWidth: 80,\r\n        itemHeight: 20,\r\n        itemOpacity: 0.75,\r\n        symbolSize: 10,\r\n        symbolShape: 'circle',\r\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n        effects: [\r\n          {\r\n            on: 'hover',\r\n            style: {\r\n              itemBackground: 'rgba(0, 0, 0, .03)',\r\n              itemOpacity: 1,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    ]}\r\n  />\r\n);\r\n\r\nexport default Line;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  h: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Header: styled.div`\r\n    font-family: sans-serif;\r\n    text-align: center;\r\n    height: 400px;\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport Line from './line';\r\nimport { S } from './style';\r\n\r\nfunction TemperatureVariant() {\r\n  return (\r\n    <S.AppHeader>\r\n      <S.h>온도 변화</S.h>\r\n      <S.Header>\r\n        <Line />\r\n      </S.Header>\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default TemperatureVariant;\r\n","import React from 'react';\r\n// import { render } from 'react-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyleWrapper = styled.div`\r\n  margin: 30px;\r\n`;\r\nexport const HeaderWrapper = styled.div`\r\n  font-size: 50px;\r\n  color: #718ac0;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FooterWrapper = styled.div`\r\n  font-size: 50px;\r\n  margin: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nfunction Calendar() {\r\n  const events = [\r\n    { title: '35°C', date: '2021-07-11' },\r\n    { title: '43°C', date: '2021-07-15' },\r\n    { title: '38°C', date: '2021-07-17' },\r\n    { title: '47°C', date: '2021-07-27' },\r\n  ];\r\n\r\n  return (\r\n    <StyleWrapper>\r\n      <HeaderWrapper>온도 캘린더</HeaderWrapper>\r\n      <FullCalendar defaultView=\"dayGridMonth\" plugins={[dayGridPlugin]} events={events} />\r\n      <FooterWrapper>이 달의 평균 온도는 53&deg;C 입니다.</FooterWrapper>\r\n    </StyleWrapper>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  Header: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { S } from './style';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getUserInfo } from '../../api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  large: {\r\n    width: theme.spacing(25),\r\n    height: theme.spacing(25),\r\n  },\r\n}));\r\n\r\nconst userInfo = {\r\n  twitter_id: 'SANDEUL920320',\r\n  name: '삼돌',\r\n  description: '나야~🎵',\r\n  user_created: '2011-04-19',\r\n  followers: 589340,\r\n  friends: 6,\r\n  profile_img: 'https://pbs.twimg.com/profile_images/1297847545289306113/H4xVZYcG_400x400.jpg',\r\n};\r\n\r\nfunction UserInfo() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    // setUser(userInfo);\r\n    const fetchData = async () => {\r\n      const response = await getUserInfo(localStorage.getItem('userId'));\r\n      setUser(response.data.data[0]);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <S.AppHeader>\r\n      <S.Header>사용자 정보</S.Header>\r\n      <div>\r\n        <Avatar src={user.profile_img} alt=\"\" className={classes.large} />\r\n        <h2>\r\n          {/* <a href={result.html_url} target=\"no_rel\">\r\n            {result.name}\r\n          </a> */}\r\n          {user.name}\r\n        </h2>\r\n      </div>\r\n      <p>@{user.twitter_id}</p>\r\n      <p>\r\n        Bio:\r\n        <br />\r\n        {user.description}\r\n      </p>\r\n      <p> created at : {user.user_created}</p>\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  Header: styled.div`\r\n    text-align: center;\r\n  `,\r\n\r\n  h1: styled.div`\r\n    text-align: center;\r\n    font-size: 90px;\r\n    bottom: 100px;\r\n    color: #ffffff;\r\n    text-shadow: 0 0 5px #91a4cc, 0 0 7px #91a4cc;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n","import { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { S } from './style';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Search() {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const formStyle = { display: 'flex', justifyContent: 'center', alignItems: 'center' };\r\n  const [userId, setUserId] = useState('');\r\n\r\n  const changeHandler = ({ target }) => setUserId(target.value);\r\n\r\n  const clickHandler = async () => {\r\n    // const a = await searchUser(userId);\r\n    // console.log(a);\r\n    localStorage.setItem('userId', userId);\r\n    history.push('/thermometer');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <S.h1>Ontact</S.h1>\r\n      <form style={formStyle} className={classes.root} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"outlined-search\"\r\n          label=\"Twitter_id\"\r\n          type=\"search\"\r\n          variant=\"outlined\"\r\n          onChange={changeHandler}\r\n        />\r\n        <Button variant=\"contained\" color=\"primary\" onClick={clickHandler}>\r\n          검색\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Header from './components/Header'\nimport Thermometer from './components/Thermometer'\nimport TemperatureVariant from './components/TemperatureVariant'\nimport Calendar from './components/Calendar'\nimport UserInfo from './components/UserInfo'\nimport Search from './components/Search'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n        <Header />\n\n        <Switch>\n          <Route path=\"/\" exact component={Search} />\n          <Route path=\"/thermometer\" component={Thermometer} />\n          <Route path=\"/temperature-variant\" component={TemperatureVariant} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/user-info\" component={UserInfo} />\n\n        </Switch>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}