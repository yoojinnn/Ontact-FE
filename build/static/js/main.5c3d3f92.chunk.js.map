{"version":3,"sources":["components/Header/style.js","components/Header/index.js","components/Thermometer/style.js","util/words.js","api/index.js","components/LoadingSpinner/index.js","components/Thermometer/index.js","components/TemperatureVariant/style.js","components/TemperatureVariant/index.js","util/makeData.js","components/Calendar/index.js","components/UserInfo/style.js","components/UserInfo/index.js","components/Search/style.js","images/background1.png","components/Search/index.js","App.js","reportWebVitals.js","index.js"],"names":["S","NavLink","styled","props","activeClassName","h1","div","Header","search","Navbar","bg","variant","style","justifyContent","paddingRight","to","Brand","href","marginLeft","Nav","exact","AppHeader","Information","Analyze","Temperature","span","Result","Table","Degree","tr","Warm","th","Mid","Cold","MidTextArea","td","textarea","Spinner","removeOneWords","array","filter","value","text","length","instance","axios","create","baseURL","process","getWords","userId","a","get","response","console","log","getUserInfo","getDatas","getGraph","getDates","getTem","LoadingSpinner","className","options","colors","enableTooltip","deterministic","fontFamily","fontSizes","padding","rotations","rotationAngles","scale","spiral","transitionDuration","Thermometer","useState","words","setWords","avg","setAvg","tem","setTem","useEffect","fetchWordsData","localStorage","getItem","data","_","uniqBy","fetchAvgData","fetchTemData","textAlign","fontSize","total_sen","Math","round","title__avg","cols","rows","warm","join","readOnly","normal","cold","height","h","TemperatureVariant","datas","setDatas","id","color","m_avg","map","obj","date_m","fetchData","margin","top","right","bottom","left","xScale","type","yScale","min","max","stacked","reverse","yFormat","axisTop","axisRight","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","scheme","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","modifiers","pointLabelYOffset","useMesh","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","StyleWrapper","HeaderWrapper","Calendar","dates","setDates","defaultView","plugins","dayGridPlugin","events","useStyles","makeStyles","root","display","spacing","large","width","UserInfo","classes","user","setUser","boxShadow","Avatar","src","profile_img","marginBottom","alt","twitter_user_url","textDecoration","target","name","twitter_id","description","user_created","paper","minWidth","title","fontWeight","content","Search","changeSearch","history","useHistory","setUserId","open","setOpen","handleClickOpen","handleClose","clickHandler","setItem","push","paddingTop","backgroundImage","backgroundSize","background","maxWidth","border","borderRadius","onKeyPress","window","event","keyCode","alignItems","noValidate","autoComplete","TextField","label","onChange","Button","onClick","Dialog","onClose","DialogTitle","disableTypography","DialogContent","DialogContentText","DialogActions","autoFocus","App","setSearch","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c3d3f92.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const S = {\r\n  NavLink: styled(NavLink)`\r\n    color: #f0adad;\r\n    font-size: 23px;\r\n    padding-left: 15px;\r\n    padding-right: 15px;\r\n    &:hover {\r\n      color: #f0adad;\r\n    }\r\n    &.${(props) => props.activeClassName} {\r\n      text-decoration: underline;\r\n    }\r\n  `,\r\n  h1: styled.div`\r\n    text-align: center;\r\n    font-size: 50px;\r\n    bottom: 100px;\r\n    color: #ffffff;\r\n    text-shadow: 0 0 5px #91a4cc, 0 0 7px #91a4cc;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { S } from './style';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\n\r\nfunction Header({ search }) {\r\n  return (\r\n    <Navbar\r\n      bg=\"light\"\r\n      variant=\"light\"\r\n      style={{ justifyContent: 'space-between', paddingRight: '3rem' }}\r\n    >\r\n      <S.NavLink to=\"/\">\r\n        <Navbar.Brand href=\"/home\" style={{ marginLeft: '30px' }}>\r\n          {/* /<img src={logo} width=\"170\" height=\"55\" alt=\"Logo\" /> */}\r\n          <S.h1>Ontact</S.h1>\r\n        </Navbar.Brand>\r\n      </S.NavLink>\r\n      <Nav>\r\n        {!search ? (\r\n          <S.NavLink exact to=\"/\">\r\n            온도계\r\n          </S.NavLink>\r\n        ) : (\r\n          <S.NavLink activeClassName=\"selected\" to=\"/thermometer\">\r\n            온도계\r\n          </S.NavLink>\r\n        )}\r\n        {!search ? (\r\n          <S.NavLink exact to=\"/\">\r\n            온도캘린더\r\n          </S.NavLink>\r\n        ) : (\r\n          <S.NavLink activeClassName=\"selected\" to=\"/calendar\">\r\n            온도캘린더\r\n          </S.NavLink>\r\n        )}\r\n        {!search ? (\r\n          <S.NavLink exact to=\"/\">\r\n            온도변화\r\n          </S.NavLink>\r\n        ) : (\r\n          <S.NavLink activeClassName=\"selected\" to=\"/temperature-variant\">\r\n            온도변화\r\n          </S.NavLink>\r\n        )}\r\n        {!search ? (\r\n          <S.NavLink exact to=\"/\">\r\n            사용자정보\r\n          </S.NavLink>\r\n        ) : (\r\n          <S.NavLink activeClassName=\"selected\" to=\"/user-info\">\r\n            사용자정보\r\n          </S.NavLink>\r\n        )}\r\n        <S.NavLink exact activeClassName=\"selected\" to=\"/\">\r\n          검색\r\n        </S.NavLink>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  h1: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Information: styled.div`\r\n    text-align: center;\r\n    margin-bottom: 30px;\r\n  `,\r\n\r\n  Analyze: styled.div`\r\n    font-size: 35px;\r\n    margin: 20px;\r\n  `,\r\n\r\n  Temperature: styled.span`\r\n    color: red;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Result: styled.span`\r\n    font-size: 22px;\r\n  `,\r\n\r\n  Table: styled.div`\r\n    width: 100%;\r\n    text-align: -webkit-center;\r\n  `,\r\n\r\n  Degree: styled.tr`\r\n    text-align: left;\r\n  `,\r\n\r\n  Warm: styled.th`\r\n    font-size: 30px;\r\n    color: #f0adad;\r\n  `,\r\n\r\n  Mid: styled.th`\r\n    font-size: 30px;\r\n    color: #404041;\r\n    padding: 0px 80px;\r\n  `,\r\n\r\n  Cold: styled.th`\r\n    font-size: 30px;\r\n    color: #718ac0;\r\n  `,\r\n\r\n  MidTextArea: styled.td`\r\n    padding: 0px 80px;\r\n  `,\r\n\r\n  textarea: styled.textarea`\r\n    resize: none;\r\n    border-radius: 8px;\r\n    border: 3px solid darkslategrey;\r\n  `,\r\n  Spinner: styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    right: 50%;\r\n    /* transform: translate(-50%, -50%); */\r\n  `,\r\n};\r\n","import _ from 'lodash';\r\n\r\nexport const deduplicateArray = (array) => {\r\n  return _.uniqBy(array, 'text');\r\n};\r\n\r\nexport const removeOneWords = (array) => {\r\n  return array.filter((value) => value.text.length > 1);\r\n};\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n  baseURL: process.env.REACT_APP_API_ADDRESS,\r\n});\r\n\r\nasync function getWords(userId) {\r\n  // 워드클라우드\r\n  try {\r\n    const response = await instance.get(`/api/word/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getUserInfo(userId) {\r\n  // 사용자 정보\r\n  try {\r\n    const response = await instance.get(`/api/user/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getDatas(userId) {\r\n  // 첫화면 평균온도\r\n  try {\r\n    const response = await instance.get(`/api/sentence?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getGraph(userId) {\r\n  // 그ㄹㅐ프\r\n  try {\r\n    const response = await instance.get(`/api/temp_avg/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getDates(userId) {\r\n  // 캘린더\r\n  try {\r\n    const response = await instance.get(`/api/calendar/?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nasync function getTem(userId) {\r\n  // 온중냉\r\n  try {\r\n    const response = await instance.get(`/api/word_temp?user_id=${userId}`);\r\n    return response;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\n\r\nexport { getWords, getUserInfo, getDatas, getDates, getGraph, getTem };\r\n","import React from 'react';\r\n\r\nfunction LoadingSpinner() {\r\n  return (\r\n    <div className=\"lds-heart\">\r\n      <div></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingSpinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport { S } from './style';\r\nimport { deduplicateArray, removeOneWords } from '../../util/words';\r\nimport { getWords, getDatas, getTem } from '../../api';\r\nimport LoadingSpinner from '../LoadingSpinner';\r\n\r\nconst options = {\r\n  colors: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b'],\r\n  enableTooltip: true,\r\n  deterministic: false,\r\n  fontFamily: 'sans-serif',\r\n  fontSizes: [15, 80],\r\n  padding: 1,\r\n  rotations: 3,\r\n  rotationAngles: [0, 90],\r\n  scale: 'sqrt',\r\n  spiral: 'archimedean',\r\n  transitionDuration: 500,\r\n};\r\n\r\nfunction Thermometer() {\r\n  const [words, setWords] = useState([]);\r\n  const [avg, setAvg] = useState([]);\r\n  const [tem, setTem] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchWordsData = async () => {\r\n      const response = await getWords(localStorage.getItem('userId'));\r\n      setWords(removeOneWords(deduplicateArray(response.data.data)));\r\n    };\r\n\r\n    const fetchAvgData = async () => {\r\n      const response = await getDatas(localStorage.getItem('userId'));\r\n      setAvg(response.data.avg);\r\n    };\r\n\r\n    const fetchTemData = async () => {\r\n      const response = await getTem(localStorage.getItem('userId'));\r\n      setTem(response.data);\r\n    };\r\n    fetchWordsData();\r\n    fetchAvgData();\r\n    fetchTemData();\r\n  }, []);\r\n\r\n  return (\r\n    <S.AppHeader>\r\n      <S.h1>온도계</S.h1>\r\n      {words.length === 0 || avg.length === 0 || tem.length === 0 ? (\r\n        <S.Spinner>\r\n          <LoadingSpinner></LoadingSpinner>\r\n          <div style={{ textAlign: 'center', fontSize: '20px' }}>분석 중..</div>\r\n        </S.Spinner>\r\n      ) : (\r\n        <div>\r\n          <S.Information>\r\n            <S.Analyze>\r\n              최근 게시글 {avg.total_sen}개의 평균온도는{' '}\r\n              <S.Temperature>{Math.round(avg.title__avg * 100) / 100}&deg;C</S.Temperature> 입니다.\r\n            </S.Analyze>\r\n            <S.Result>총 {avg.total_sen}개의 글 분석 결과</S.Result>\r\n          </S.Information>\r\n\r\n          <S.Table>\r\n            <table>\r\n              <tbody>\r\n                <S.Degree>\r\n                  <S.Warm>溫온</S.Warm>\r\n                  <S.Mid>中중</S.Mid>\r\n                  <S.Cold>冷냉</S.Cold>\r\n                </S.Degree>\r\n                <tr style={{ fontSize: '20px' }}>\r\n                  <td>\r\n                    <S.textarea\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      fontSize=\"20px\"\r\n                      value={tem.warm && tem.warm.join(', ')}\r\n                      readOnly\r\n                    ></S.textarea>\r\n                  </td>\r\n                  <S.MidTextArea>\r\n                    <S.textarea\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      value={tem.normal && tem.normal.join(', ')}\r\n                      readOnly\r\n                    ></S.textarea>\r\n                  </S.MidTextArea>\r\n                  <td>\r\n                    <S.textarea\r\n                      cols=\"30\"\r\n                      rows=\"10\"\r\n                      value={tem.cold && tem.cold.join(', ')}\r\n                      readOnly\r\n                    ></S.textarea>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </S.Table>\r\n\r\n          <div style={{ height: 600 }}>\r\n            <S.h1>나의 단어</S.h1>\r\n            <ReactWordcloud options={options} words={words} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default Thermometer;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  h: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n\r\n  Header: styled.div`\r\n    font-family: sans-serif;\r\n    text-align: center;\r\n    height: 400px;\r\n  `,\r\n};\r\n","import React from 'react';\r\nimport { S } from './style';\r\nimport { getGraph } from '../../api';\r\nimport { useState, useEffect } from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport { makeData } from '../../util/makeData';\r\n\r\nfunction TemperatureVariant() {\r\n  const [datas, setDatas] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getGraph(localStorage.getItem('userId'));\r\n      const data = {\r\n        id: '온도',\r\n        color: 'hsl(135, 70%, 50%)',\r\n        data: makeData(response.data.m_avg),\r\n      };\r\n      setDatas(data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <S.AppHeader>\r\n      <S.h>온도 변화</S.h>\r\n      <S.Header>\r\n        {datas && (\r\n          <ResponsiveLine\r\n            data={[datas]}\r\n            margin={{ top: 50, right: 110, bottom: 50, left: 100 }}\r\n            xScale={{ type: 'point' }}\r\n            yScale={{ type: 'linear', min: '10', max: '90', stacked: true, reverse: false }}\r\n            yFormat=\" >-.2f\"\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n              orient: 'bottom',\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: '',\r\n              legendOffset: 36,\r\n              legendPosition: 'middle',\r\n            }}\r\n            axisLeft={{\r\n              orient: 'left',\r\n              tickSize: 5,\r\n              tickPadding: 5,\r\n              tickRotation: 0,\r\n              legend: '온도( ºC)',\r\n              legendOffset: -40,\r\n              legendPosition: 'middle',\r\n            }}\r\n            colors={{ scheme: 'pink_yellowGreen' }}\r\n            pointSize={10}\r\n            pointColor={{ theme: 'background' }}\r\n            pointBorderWidth={2}\r\n            pointBorderColor={{ from: 'serieColor', modifiers: [] }}\r\n            pointLabelYOffset={-12}\r\n            useMesh={true}\r\n            legends={[\r\n              {\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 101,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 10,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                  {\r\n                    on: 'hover',\r\n                    style: {\r\n                      itemBackground: 'rgba(0, 0, 0, .03)',\r\n                      itemOpacity: 1,\r\n                    },\r\n                  },\r\n                ],\r\n              },\r\n            ]}\r\n          />\r\n        )}\r\n      </S.Header>\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default TemperatureVariant;\r\n","export function makeData(array) {\r\n  return array.map((value) => {\r\n    const obj = {};\r\n    obj['x'] = value.date_m;\r\n    obj['y'] = value.title__avg;\r\n    return obj;\r\n  });\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// import { render } from 'react-dom';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport styled from 'styled-components';\r\nimport { getDates } from '../../api';\r\n\r\nexport const StyleWrapper = styled.div`\r\n  margin: 30px;\r\n`;\r\nexport const HeaderWrapper = styled.div`\r\n  font-size: 50px;\r\n  color: #718ac0;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const FooterWrapper = styled.div`\r\n  font-size: 50px;\r\n  margin: 20px;\r\n  text-align: center;\r\n`;\r\n\r\nfunction Calendar() {\r\n  const [dates, setDates] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getDates(localStorage.getItem('userId'));\r\n      setDates(response.data.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <StyleWrapper>\r\n      <HeaderWrapper>온도 캘린더</HeaderWrapper>\r\n      <FullCalendar defaultView=\"dayGridMonth\" plugins={[dayGridPlugin]} events={dates} />\r\n    </StyleWrapper>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  AppHeader: styled.div`\r\n    margin: 30px;\r\n  `,\r\n\r\n  Header: styled.div`\r\n    font-size: 50px;\r\n    color: #718ac0;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { S } from './style';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getUserInfo } from '../../api';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  large: {\r\n    width: theme.spacing(30),\r\n    height: theme.spacing(30),\r\n  },\r\n}));\r\n\r\nfunction UserInfo() {\r\n  const classes = useStyles();\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    // setUser(userInfo);\r\n    const fetchData = async () => {\r\n      const response = await getUserInfo(localStorage.getItem('userId'));\r\n      setUser(response.data.data[0]);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <S.AppHeader>\r\n      <S.Header>사용자 정보</S.Header>\r\n      <div\r\n        style={{\r\n          fontSize: '25px',\r\n          textAlign: '-webkit-center',\r\n          padding: '30px',\r\n          margin: '10px',\r\n          boxShadow: '0 1px 5px rgba(0,0,0,0.5)',\r\n        }}\r\n      >\r\n        <Avatar\r\n          src={user.profile_img}\r\n          style={{ marginBottom: '10px' }}\r\n          alt=\"\"\r\n          className={classes.large}\r\n        />\r\n        <h2>\r\n          <a\r\n            href={user.twitter_user_url}\r\n            style={{\r\n              textDecoration: 'none',\r\n            }}\r\n            target=\"no_rel\"\r\n          >\r\n            {user.name}\r\n          </a>\r\n        </h2>\r\n\r\n        <p>@{user.twitter_id}</p>\r\n        <p>\r\n          Bio:\r\n          <br />\r\n          {user.description}\r\n        </p>\r\n        <p> created at : {user.user_created}</p>\r\n      </div>\r\n    </S.AppHeader>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import styled from 'styled-components';\r\n\r\nexport const S = {\r\n  Header: styled.div`\r\n    text-align: center;\r\n  `,\r\n\r\n  h1: styled.div`\r\n    text-align: center;\r\n    font-size: 90px;\r\n    bottom: 100px;\r\n    color: #ffffff;\r\n    text-shadow: 0 0 5px #91a4cc, 0 0 7px #91a4cc;\r\n    font-weight: bold;\r\n  `,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/background1.f1f0fe2e.png\";","import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { S } from './style';\r\nimport bg from '../../images/background1.png';\r\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: { minWidth: '500px' },\r\n  title: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n  },\r\n  content: {\r\n    fontFamily: 'NanumBarunPenR',\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nfunction Search({ changeSearch }) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const formStyle = { display: 'flex', justifyContent: 'center', alignItems: 'center' };\r\n  const [userId, setUserId] = useState('');\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const changeHandler = ({ target }) => setUserId(target.value);\r\n\r\n  const clickHandler = async () => {\r\n    localStorage.setItem('userId', userId);\r\n    if (userId === '') {\r\n      handleClickOpen();\r\n    } else if (userId === null) {\r\n      handleClickOpen();\r\n    } else {\r\n      changeSearch();\r\n      history.push('/thermometer');\r\n    }\r\n  };\r\n\r\n  const keyPressHandler = () => {\r\n    if (window.event.keyCode === 13) {\r\n      clickHandler();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        paddingTop: '140px',\r\n        backgroundImage: 'url(' + bg + ')',\r\n        backgroundSize: 'cover',\r\n        height: '100vh',\r\n        color: '#f5f5f5',\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          background: 'whitesmoke',\r\n          padding: '30px',\r\n          margin: 'auto',\r\n          maxWidth: 'fit-content',\r\n          border: '1px solid black',\r\n          borderRadius: '10px',\r\n        }}\r\n      >\r\n        <S.h1>Ontact</S.h1>\r\n        <form\r\n          onKeyPress={keyPressHandler}\r\n          style={formStyle}\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n        >\r\n          <TextField\r\n            id=\"outlined-search\"\r\n            label=\"Twitter_id\"\r\n            type=\"search\"\r\n            variant=\"outlined\"\r\n            onChange={changeHandler}\r\n          />\r\n          <Button variant=\"contained\" color=\"primary\" onClick={clickHandler}>\r\n            검색\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        classes={{ paper: classes.paper }}\r\n      >\r\n        <DialogTitle\r\n          id=\"alert-dialog-title\"\r\n          disableTypography=\"true\"\r\n          classes={{ root: classes.title }}\r\n        >\r\n          <WarningRoundedIcon style={{ fontSize: 40 }} />\r\n          {'경고'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\" classes={{ root: classes.content }}>\r\n            아이디를 입력해주세요\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={handleClose}\r\n            color=\"primary\"\r\n            autoFocus\r\n            classes={{ root: classes.content }}\r\n          >\r\n            확인\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Thermometer from './components/Thermometer';\nimport TemperatureVariant from './components/TemperatureVariant';\nimport Calendar from './components/Calendar';\nimport UserInfo from './components/UserInfo';\nimport Search from './components/Search';\n\nfunction App() {\n  const [search, setSearch] = useState(false);\n\n  const changeSearch = () => {\n    setSearch(true);\n  };\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header search={search} />\n        <Switch>\n          <Route path=\"/\" exact render={() => <Search changeSearch={changeSearch} />} />\n          <Route path=\"/thermometer\" component={Thermometer} />\n          <Route path=\"/temperature-variant\" component={TemperatureVariant} />\n          <Route path=\"/calendar\" component={Calendar} />\n          <Route path=\"/user-info\" component={UserInfo} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}